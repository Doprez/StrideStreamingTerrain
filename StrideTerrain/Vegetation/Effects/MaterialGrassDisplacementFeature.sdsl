namespace StrideTerrain.Vegetation.Effects
{
    shader MaterialGrassDisplacementFeature 
        : IMaterialSurface, PositionStream4, NormalStream, TransformationBase, Transformation, ShaderBase, Texturing, TerrainQuery, Math, TransformationInstancing, Global, NormalUpdate
    {
        float3x3 RotateY(float theta) {
            float c = cos(theta);
            float s = sin(theta);
            return float3x3(
                float3(c, 0, s),
                float3(0, 1, 0),
                float3(-s, 0, c)
            );
        }

        override void Compute()
        {
        }

        stage override void TransformPosition()
        {
            float4x4 instanceWorld = GetInstanceWorld(streams.InstanceID);

            float2 grassPosition = float2(World._m30 + instanceWorld._m30, World._m32 + instanceWorld._m32);

            float3x3 rot = RotateY(FastRandom(streams.InstanceID * PI * 2.0f));
            streams.Position.xyz = mul(streams.Position.xyz, rot);
            streams.Position.xyz *= 0.8f + max(1.0f, FastRandom(streams.InstanceID)) * 1.0f;
            streams.Position.y *= 2;
            streams.Position.x += sin(Time * 1.5f + grassPosition.x * 0.1f) * streams.Position.y * 0.2f;
            streams.Position.z += cos(Time * 1.5f + grassPosition.y * 0.1f) * streams.Position.y * 0.2f;

            float fadeOutDistance = 50.0f;
            float fadeOutRange = 16.0f;
            float distanceToCamera = saturate((length(Eye.xz - grassPosition) - fadeOutDistance) / fadeOutRange);
            streams.Position.xyz *= 1.0f - distanceToCamera;

            streams.PositionWS.y = streams.Position.y;
            streams.PositionWS.xz = streams.Position.xz + grassPosition;

            uint ox = streams.InstanceID + (uint)grassPosition.x;
            uint oy = streams.InstanceID + (uint)grassPosition.y;

            streams.PositionWS.xz += float2(FastRandom(ox), FastRandom(oy));

            float terrainHeight = GetTerrainHeightAt(streams.PositionWS.x, streams.PositionWS.z);
            float3 terrainNormal = GetTerrainNormalAt(streams.PositionWS.x, streams.PositionWS.z);

            streams.PositionWS.y += terrainHeight;
            streams.meshNormal = terrainNormal;
            streams.meshTangent = float4(0, 0, -1, 1);

            if (terrainHeight < 80 || terrainHeight > 180 || abs(terrainNormal.y) < 0.9f)
                streams.PositionWS.y /= 0;
        }
    };
}